version: '3.9'

networks:
  app_network:
    driver: bridge

services:
  db:
    container_name: content_assistant_db
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "5432", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrations:
    container_name: content_assistant_migrations
    build:
      context: .
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PYTHONPATH=/app

    networks:
      - app_network
    command: ["alembic", "upgrade", "head"]

  app:
    image: content_assistant_app:latest
    build:
      context: .
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
      - migrations
    networks:
      - app_network
    command: ["uvicorn", "content_assistant.main:create_app", "--factory", "--host", "0.0.0.0", "--port", "8000"]
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "1.00"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M
      restart_policy:
        condition: on-failure

  nginx:
    image: nginx:alpine
    container_name: content_assistant_nginx
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app_network

volumes:
  pgdata:
